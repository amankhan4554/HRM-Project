@model HumanResourceManagementSystem.Models.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<link href="~/css/editform.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<div class="main-content">
    <div class="container-fluid content-top-gap">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb my-breadcrumb">
                <li class="breadcrumb-item"><a href="~/Event/Index" style="color:darkblue">Events</a></li>
                <li class="breadcrumb-item active" aria-current="page">Adding-Event</li>
            </ol>
        </nav>

    </div>
    <div class="form-block">
        <h2>Adding Event</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <section>
                <div class="container">
                    <div class="contacts12-main">
                        <!-- ....... form .............-->
                        <form action="" method="post" class="form">
                            <div class="main-input">
                                <div>
                                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <input type="text" name="Subject" id="Subject" placeholder=" Event Subject" class="contact-input"
                                           data-val="true" data-val-required="Department Name is Blank" data-val-regex-pattern="^[a-zA-Z ]{5,30}$" data-val-regex="Please Enter Valid Department Name" data-val-minlength-min="5"
                                           data-val-minlength="Department Name is Too Small" data-val-maxlength-max="30" data-val-maxlength="Department Name is Too Large" onchange="UserCheck()" />
                                    <p id="Status"></p>
                                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-icon position-relative">
                                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <span>
                                        <input type="date" name="StartTime" id="today" placeholder=""  readonly
                                               class="contact-input" required />
                                    </span>
                                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                                </div>
                                <div>
                                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <input type="date" name="EndTime" id="date-time" placeholder="" class="contact-input" min="2022-10-08"
                                           required />
                                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <textarea class="contact-textarea" name="Description" id="Description"
                                      placeholder="Type Event Description here" data-val="true" data-val-required="Department Description is Blank" data-val-regex-pattern="^[#.0-9a-zA-Z\s,-]+$"
                                      data-val-regex="Please Enter Valid Department Description" data-val-minlength-min="20" data-val-minlength="Department Description is Too Small"
                                      data-val-maxlength-max="225" data-val-maxlength="Department Description is Too Large"></textarea>
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Add Event" class="btn btn-default" />
                                    <i class="fa fa-arrow-circle-o-left">&nbsp;@Html.ActionLink("Back to List", "Index")</i>
                                </div>
                            </div>
                        </form>
                        <!-- //............. form.......... -->
                    </div>
                </div>
            </section>
        }
    </div>
</div>





<script>
    $(function () {
        $("#datepicker").datepicker();
    });
</script>

<!-- //............. Already Exist...................... -->
<script>
    function UserCheck() {
      $("#Status").html("Checking.........!");
      $.post("@Url.Action("exitInput", "Event")",
          {
              userdata: $("#Subject").val()
          },
          function (data) {

              if (data == 0) {
                  $("#Status").html('<font color="Green">Subject Available......!</font>');
                  $("#Subject").css("border-color", "Green");
              }
              else {
                  $("#Status").html('<font color="Red"> That Subject already taken......!</font>');
                  $("#Subject").css("border-color", "red");
              }
          });
          }
</script>

<script>
    document.getElementById('today').value = new Date().toISOString().slice(0, 10);
</script>
<script>
    document.getElementById('date-time').value = new Date().toISOString().slice(0, 10);
</script>
@section Validation {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}
